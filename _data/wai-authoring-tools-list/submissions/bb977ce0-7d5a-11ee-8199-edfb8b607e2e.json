{
  "accessibility-information-preserved-partially-description": "",
  "accessible-components-available-partially-description": "",
  "accessible-content-production-possible-partially-description": "Wagtail places extensive restrictions on the production of web content, which all nonetheless allow for the production of accessible content, with the exception of:\r\n\r\n- Missing support for marking images as decorative / setting alt text in context for image chooser fields. See _B.1.1.2 Content Auto-Generation During Authoring Sessions (WCAG)_. This could be worked around by only creating images within rich text fields, which is possible but unlikely.\r\n- Missing support for table/row headers with TypedTableBlock. This could be worked around by only creating tables with TableBlock, which is possible but unlikely.\r\n- Missing support for setting `lang` attributes within rich text. This could be worked around by using other types of content modeling for multilingual content, which is possible but unlikely.",
  "accessible-templates-available-partially-description": "With rich text formatting and StreamField blocks, Wagtail provides templates for basic text content as well as complex formatting like tables. Wagtail also provides templates for form fields within its forms module. Specific templates have accessibility issues, though there are alrenatives available.\r\n\r\nFor form fields in the form builder, a wide range of fields have accessibility issues with no alternatives available.\r\n\r\nThere are known issues with:\r\n\r\n- Blockquotes in rich text (no cite field)\r\n- Blockquotes in StreamField (no cite field)\r\n- Images in StreamField (no alt text field)\r\n- TypedTableBlock in StreamField (no caption, no column header or row header support)\r\n\r\nSee https://wagtail.org/accessibility/atag-audit/#b241-accessible-template-options-wcag for a full record of accessibility issues in content templates",
  "alt-available-partially-description": "Wagtail provides alternative text for all images within the CMS, but in five prominent cases the programmatically-associated text isn’t the best possible one. All icons have appropriate alt text, and Wagtail has no built-in support for videos.\r\n\r\nSee https://wagtail.org/accessibility/atag-audit/#a211-text-alternatives-for-rendered-non-text-content for specific occurrences where we are aware improvement is needed.\r\nquestion-presentation-programmatically-determined: partially\r\npresentation-programmatically-determined-partially-description: Wagtail uses the following status indicators in editing views:\r\n\r\n- Fail: Comments on fields. Comments are displayed as a 'speech bubble' icon next to the field they are associated with. The association isn’t programmatically exposed. Even visually, the presence of a comment can only be identified on hover/focus within the field’s area.\r\n- Fail: Comments in rich text. Comments are displayed as highlighted text within the rich text field. The association isn’t programmatically exposed.\r\n- Pass: Character count for rich text fields. The character count is displayed as a number next to the field it is associated with. The association is programmatically exposed with `aria-describedby` ('Character count: 18/120').",
  "alternatives-manageable-partially-description": "Though Wagtail provides support for editing alt text everywhere images can be added, it doesn’t provide support for marking images as decorative (set to empty alt text), or changing alt text in context.",
  "auto-content-accessible-partially-description": "Wagtail automatically generates content in a few scenarios. In the following scenarios, markup is accessible without further work:\r\n\r\n- Pass: Links markup for links to pages, documents, external URLs, email addresses, phone numbers, and internal anchors within rich text fields.\r\n- Pass: Embeds for external resources within rich text fields.\r\n- Pass: Embeds for external resources in StreamField.\r\n- Pass: Image markup for images in rich text fields. Images are rendered with alt text from an editable field, and a checkbox to mark the image as decorative.\r\n- Pass: Table markup from TableBlock.\r\n\r\nIn the following scenarios, markup isn’t accessible out of the box:\r\n\r\n- Fail: Image markup for images in other content. By default, Wagtail does not make it possible to change the image’s alt text in context, and doesn’t make it possible to mark images as decorative.\r\n- Fail: Table markup from TypedTableBlock. This is lacking the ability to set row or column headers.\r\n\r\nWagtail provides automatic checking for specific accessibility problems but this checking is only performed when authors use the full-screen live preview, and there is no prompt / suggestion to perform this check (or any other).",
  "automatically-checks-partially-description": "There are a number of formatting / content entry options in the CMS that can lead to accessibility issues. The built-in accessibility checker provides automated tests for a number of possible issues, but not all. Available checks are:\r\n\r\n- button-name: button elements must always have a text label.\r\n- empty-heading: This rule checks for headings with no text content. Empty headings are confusing to screen readers users and should be avoided.\r\n- empty-table-header: Table header text should not be empty\r\n- frame-title: iframe elements must always have a text label.\r\n- heading-order: This rule checks for incorrect heading order. Headings should be ordered in a logical and consistent manner, with the main heading (h1) followed by subheadings (h2, h3, etc.).\r\n- input-button-name: input button elements must always have a text label.\r\n\r\n- link-name: a link elements must always have a text label.\r\n- p-as-heading: This rule checks for paragraphs that are styled as headings. Paragraphs should not be styled as headings, as they don’t help users who rely on headings to navigate content.\r\n\r\n\r\nThere are a number of success criteria that do not have automated checks nor instructions for manual checking:\r\n\r\n- 1.1.1 Non-text Content (A) – specifically instructions on correct entry of alt text, and marking images as decorative when appropriate\r\n- 2.4.4 Link Purpose (In Context) (AA) – instructions and potentially limited automated checks on correct link text (avoid 'click here')\r\n- 1.4.5 Images of Text (AA) – instructions on avoiding images of text except for scenarios where there is no alternative\r\n- 2.4.9 Link Purpose (Link Only) (AAA) – see above\r\n- 1.4.9 Images of Text (No Exception) (AAA) – see above\r\n- 3.1.5 Reading Level (AAA) – instructions for manual checking or automated checks\r\n- 2.4.10 Section Headings (AAA) – instructions for manual checking or automated checks\r\n- 3.3.5 Help (AAA) – instructions for manual checking or automated checks for the form builder\r\n\r\n\r\nAll of Wagtail’s checks are pass/fail and as such require no author input. The checks report on the number of issues detected, but the location of the issues can’t be programmatically determined.",
  "comments": "Thank you to the Wagtail accessibility team for the foundational work that made this audit and report possible. Thank you to Torchbox for sponsoring this audit and associated reporting.\r\n\r\nAdditional thanks to Albina Starykova, Joshua Munn, Sage Abdullah, Thibaud Colas, and Nick Lee for their work on Wagtail’s first ever accessibility checker (https://wagtail.org/blog/introducing-wagtails-new-accessibility-checker/), which was essential for us to partly meet B.3. and B.4. guidelines.\r\n\r\n---\r\n\r\nOur full report in Markdown/HTML is available at https://wagtail.org/accessibility/atag-audit/\r\n\r\nOur full report in the ATAG Report Tool format is available at https://gist.github.com/thibaudcolas/c48b0b4cf8e7966cd09d22677ab63173.",
  "content-searchable-partially-description": "Wagtail supports browsers’ built-in text search which meets all criteria, but only allows searching within the currently-active tab of the editing view. For example, for pages, content under the 'Promote' tab will only be searchable when this tab is active.",
  "documentation-promotes-accessibility-partially-description": "Wagtail has extensive documentation about accessibility features for developers (https://docs.wagtail.org/en/stable/advanced_topics/accessibility_considerations.html), but is lacking documentation for CMS users.",
  "editors-guided-partially-description": "",
  "enough-time-partially-description": "Wagtail doesn’t provide auto-save functionality. For Wagtail sites, the default session time limit is 2 weeks.",
  "features-documented-partially-description": "The following functionality would be used to meet Part A and needs to be described either in the documentation or in the user interface:\r\n\r\n- Image title fields’ usage as alt text\r\n- Page-level keyboard shortcuts\r\n- Skip link\r\n- Collapsible sections\r\n- Link to specific collapsible sections\r\n- Collapse/expand all\r\n- Minimap\r\n- Session time limit\r\n- Editing of headings and elements nesting in rich text fields\r\n- Text search\r\n- Browser-level UI settings\r\n  - Sidebar expanded/collapsed\r\n  - Rich text toolbar pinned/unpinned\r\n  - Minimap opened/closed\r\n  - Currently-open side panel\r\n- Profile-level UI settings\r\n  - Language\r\n  - Time zone\r\n  - Notification settings\r\n  - Admin interface theme\r\n- Live preview\r\n- Command palette available commands\r\n\r\nThe following functionality is described in the user interface:\r\n\r\n- Restore revisions\r\n- Markdown keyboard commands for rich text\r\n- Command palette trigger\r\n\r\nThe following functionality is described in the documentation:\r\n\r\n- Comment shortcut\r\n- Rich text keyboard shortcuts\r\n\r\nThe following functionality is provided by the underlying platform:\r\n\r\n- Embeds titles as alt text for embedded content\r\n\r\nSee https://wagtail.org/accessibility/atag-audit/#a422-document-all-features for a full record of which features are and aren’t documented.",
  "features-promote-accessibility-partially-description": "",
  "flashing-optional-partially-description": "",
  "form_name": "submission",
  "form_version": "1",
  "helps-fix-problems-partially-description": "",
  "navigate-by-structure-partially-description": "Markup elements in the content aren’t exposed in the CMS. The only editable programmatic relationships are headings and element nesting in rich text fields, which can be navigated via the keyboard.",
  "non-web-based-accessible-partially-description": "",
  "presentation-programmatically-determined-partially-description": "",
  "prevent-mistakes-partially-description": "Though a large number of authoring actions are reversible, not all are. The following actions are reversible:\r\n\r\n- Plain text and rich text content editing within specific fields, reversible until the user submits the form.\r\n- Editing of page or snippets content supporting revisions, reversible for the whole page/snippet at any later point in the site’s history.\r\n\r\nThe following actions are not reversible but do require confirmation to proceed:\r\n\r\n- Permanent deletion of any content which has its own dedicated creation/editing views.\r\n- Unpublishing of pages and snippets.\r\n- Deletion of comments within page content.\r\n\r\nThe following actions are not reversible and do not require confirmation to proceed:\r\n\r\n- StreamField / InlinePanel block-based content editing, reversible only as part of support for content revisions.\r\n  - Consider implementing an in-browser undo-redo stack for those interactions.\r\n- Image / Document / Page / Task / Snippet / Embed chooser fields, reversible only as part of support for content revisions.\r\n  - Consider implementing an in-browser undo-redo stack for those interactions.\r\n- Authoring actions on content that does not support revisions such as images, documents, etc.\r\n  - Implement either a confirmation step for those actions, or revisions/versioning support.",
  "previews-accessible-partially-description": "",
  "question-accessibility-information-preserved": "yes",
  "question-accessible-components-available": "not applicable",
  "question-accessible-content-production-possible": "partially",
  "question-accessible-templates-available": "partially",
  "question-alt-available": "partially",
  "question-alternatives-manageable": "partially",
  "question-auto-content-accessible": "partially",
  "question-automatically-checks": "partially",
  "question-content-searchable": "partially",
  "question-documentation-promotes-accessibility": "partially",
  "question-editors-guided": "yes",
  "question-enough-time": "partially",
  "question-features-documented": "partially",
  "question-features-promote-accessibility": "yes",
  "question-flashing-optional": "no",
  "question-helps-fix-problems": "no",
  "question-navigate-by-structure": "partially",
  "question-non-web-based-accessible": "not applicable",
  "question-presentation-programmatically-determined": "partially",
  "question-prevent-mistakes": "partially",
  "question-previews-accessible": "yes",
  "question-supports-display-prefs": "yes",
  "question-web-based-accessible": "partially",
  "question-works-with-keyboard": "partially",
  "repository": "wai-authoring-tools-list",
  "submission_date": "2023-11-07T10:45:14.286Z",
  "submission_ref": "bb977ce0-7d5a-11ee-8199-edfb8b607e2e",
  "submitter-email": "thibaudcolas@gmail.com",
  "submitter-name": "Thibaud Colas",
  "supports-display-prefs-partially-description": "",
  "tool-description": "A Django content management system focused on flexibility and user experience.",
  "tool-license": "free",
  "tool-link": "https://wagtail.org/",
  "tool-name": "Wagtail",
  "tool-release-date": "2023-08-14",
  "tool-statement": "https://wagtail.org/accessibility/",
  "tool-vendor": "Wagtail",
  "tool-version": "v5.1.1",
  "web-based-accessible-partially-description": "Wagtail currently targets WCAG 2.1 AA conformance for the administrative interface of the CMS. Though a lot of progress has been made, there are still known conformance issues. See https://wagtail.org/accessibility/ for reports from past audits, and future audit plans.",
  "works-with-keyboard-partially-description": "Though the majority of the authoring tool’s functionality is keyboard accessible, there are seven specific areas that aren’t:\r\n\r\n- In all forms of content with 'draft' support – access to the 'Publish', 'Submit to moderation', 'Request changes', 'Approve and Publish', 'Approve with comment and Publish'.\r\n- In rich text fields, pin/unpin of the rich text toolbar.\r\n- In rich text fields, Edit functionality for links, documents, images, embeds.\r\n- In image/document/page/task/snippet choosers, the chooser dialog.\r\n- In page listings, manual sorting of pages.\r\n- In image create/edit forms, creation or editing of a focal area.\r\n- In table blocks, editing of the table.\r\n\r\nSee https://wagtail.org/accessibility/atag-audit/#a311-keyboard-access-minimum for the full status and proposed changes."
}
